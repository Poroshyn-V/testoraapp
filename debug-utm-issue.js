import Stripe from 'stripe';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

async function debugUtmIssue() {
  try {
    console.log('üîç –î–ï–ë–ê–ì UTM –ú–ï–¢–û–ö...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∏
    const payments = await stripe.paymentIntents.list({ limit: 3 });
    
    for (const payment of payments.data) {
      console.log(`\nüí≥ –ü–ª–∞—Ç–µ–∂: ${payment.id}`);
      console.log(`   Status: ${payment.status}`);
      console.log(`   Customer: ${payment.customer}`);
      
      if (payment.customer) {
        const customer = await stripe.customers.retrieve(payment.customer);
        console.log(`   Customer Email: ${customer?.email || 'N/A'}`);
        console.log(`   Customer Metadata:`, customer?.metadata || {});
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ UTM –ø–æ–ª—è
        const metadata = customer?.metadata || {};
        console.log(`   UTM Source: "${metadata.utm_source || '–ù–ï–¢'}"`);
        console.log(`   UTM Medium: "${metadata.utm_medium || '–ù–ï–¢'}"`);
        console.log(`   UTM Campaign: "${metadata.utm_campaign || '–ù–ï–¢'}"`);
        console.log(`   Ad Name: "${metadata.ad_name || '–ù–ï–¢'}"`);
        console.log(`   Adset Name: "${metadata.adset_name || '–ù–ï–¢'}"`);
        console.log(`   Campaign Name: "${metadata.campaign_name || '–ù–ï–¢'}"`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

debugUtmIssue();
