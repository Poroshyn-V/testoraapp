import Stripe from 'stripe';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

async function debugNotificationIssue() {
  try {
    console.log('üîç –î–ï–ë–ê–ì –ü–†–û–ë–õ–ï–ú–´ –° –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø–ú–ò...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∏
    const payments = await stripe.paymentIntents.list({ limit: 5 });
    
    for (const payment of payments.data) {
      console.log(`\nüí≥ –ü–ª–∞—Ç–µ–∂: ${payment.id}`);
      console.log(`   Status: ${payment.status}`);
      console.log(`   Amount: $${(payment.amount / 100).toFixed(2)}`);
      console.log(`   Customer ID: ${payment.customer || '–ù–ï–¢'}`);
      
      if (payment.customer) {
        try {
          const customer = await stripe.customers.retrieve(payment.customer);
          console.log(`   Customer Email: ${customer?.email || '–ù–ï–¢'}`);
          console.log(`   Customer Name: ${customer?.name || '–ù–ï–¢'}`);
          console.log(`   Customer Metadata Keys:`, Object.keys(customer?.metadata || {}));
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ–ª—è
          const metadata = customer?.metadata || {};
          console.log(`   UTM Source: "${metadata.utm_source || '–ù–ï–¢'}"`);
          console.log(`   UTM Medium: "${metadata.utm_medium || '–ù–ï–¢'}"`);
          console.log(`   UTM Campaign: "${metadata.utm_campaign || '–ù–ï–¢'}"`);
          console.log(`   Ad Name: "${metadata.ad_name || '–ù–ï–¢'}"`);
          console.log(`   Geo Country: "${metadata.geo_country || '–ù–ï–¢'}"`);
          
        } catch (error) {
          console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: ${error.message}`);
        }
      } else {
        console.log(`   ‚ùå –ù–ï–¢ CUSTOMER ID`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

debugNotificationIssue();
