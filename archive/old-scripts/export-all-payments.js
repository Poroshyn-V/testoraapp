import Stripe from 'stripe';
import { GoogleSpreadsheet } from 'google-spreadsheet';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

async function exportAllPayments() {
  try {
    console.log('üîÑ –ü–æ–ª—É—á–∞—é –≤—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –∏–∑ Stripe...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–ª–∞—Ç–µ–∂–∏
    const payments = await stripe.paymentIntents.list({
      limit: 100,
      expand: ['data.customer']
    });
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–µ–π: ${payments.data.length}`);
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
    const doc = new GoogleSpreadsheet(process.env.GOOGLE_SHEETS_DOC_ID);
    
    await doc.useServiceAccountAuth({
      client_email: process.env.GOOGLE_SERVICE_EMAIL,
      private_key: process.env.GOOGLE_SERVICE_PRIVATE_KEY?.replace(/\\n/g, '\n')
    });
    
    await doc.loadInfo();
    console.log(`üìÑ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–∞–±–ª–∏—Ü–µ: ${doc.title}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
    const sheet = doc.sheetsByIndex[0];
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏
    const headers = [
      'Payment ID',
      'Amount',
      'Currency',
      'Status',
      'Created',
      'Customer ID',
      'Customer Email',
      'UTM Source',
      'UTM Medium',
      'UTM Campaign',
      'UTM Content',
      'UTM Term',
      'Ad Name',
      'Adset Name',
      'Campaign Name',
      'Campaign ID',
      'Ad ID',
      'Adset ID',
      'FBCLID',
      'FBP',
      'FBC'
    ];
    
    // –û—á–∏—â–∞–µ–º –ª–∏—Å—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    await sheet.clear();
    await sheet.addRow(headers);
    
    console.log('üìù –î–æ–±–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –ø–æ–∫—É–ø–∫—É
    for (const payment of payments.data) {
      const customer = payment.customer;
      const metadata = customer?.metadata || {};
      
      const row = [
        payment.id,
        `$${(payment.amount / 100).toFixed(2)}`,
        payment.currency.toUpperCase(),
        payment.status,
        new Date(payment.created * 1000).toLocaleString(),
        customer?.id || 'N/A',
        customer?.email || 'N/A',
        metadata.utm_source || 'N/A',
        metadata.utm_medium || 'N/A',
        metadata.utm_campaign || 'N/A',
        metadata.utm_content || 'N/A',
        metadata.utm_term || 'N/A',
        metadata.ad_name || 'N/A',
        metadata.adset_name || 'N/A',
        metadata.campaign_name || 'N/A',
        metadata.campaign_id || 'N/A',
        metadata.ad_id || 'N/A',
        metadata.adset_id || 'N/A',
        metadata.fbclid || 'N/A',
        metadata.fbp || 'N/A',
        metadata.fbc || 'N/A'
      ];
      
      await sheet.addRow(row);
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø–ª–∞—Ç–µ–∂: ${payment.id}`);
    }
    
    console.log(`üéâ –£—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${payments.data.length} –ø–ª–∞—Ç–µ–∂–µ–π –≤ Google Sheets!`);
    console.log(`üìä –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É: https://docs.google.com/spreadsheets/d/${process.env.GOOGLE_SHEETS_DOC_ID}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:', error.message);
  }
}

exportAllPayments();
