import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã
const testData = {
  created_at: new Date().toISOString(),
  session_id: 'test_session_12345',
  payment_status: 'paid',
  amount: 99.99,
  currency: 'USD',
  email: 'test@example.com',
  country: 'US',
  gender: 'male',
  age: '25-34',
  product_tag: 'premium',
  creative_link: 'https://example.com/creative',
  utm_source: 'facebook',
  utm_medium: 'social',
  utm_campaign: 'summer_sale',
  utm_content: 'video_ad',
  utm_term: 'premium_product',
  platform_placement: 'feed',
  ad_name: 'Summer Sale Video',
  adset_name: 'Premium Users',
  campaign_name: 'Summer Campaign 2024',
  web_campaign: 'summer_2024',
  customer_id: 'cus_test123',
  client_reference_id: 'ref_12345',
  mode: 'payment',
  status: 'complete',
  raw_metadata_json: JSON.stringify({
    test: true,
    source: 'manual_test',
    created_by: 'system'
  })
};

async function testGoogleSheets() {
  try {
    console.log('üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Google Sheets...');
    
    const doc = new GoogleSpreadsheet(process.env.GOOGLE_SHEETS_DOC_ID);
    
    // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –ø–æ–º–æ—â—å—é JWT
    const serviceAccountAuth = new JWT({
      email: process.env.GOOGLE_SERVICE_EMAIL,
      key: (process.env.GOOGLE_SERVICE_PRIVATE_KEY || '').replace(/\\n/g, '\n'),
      scopes: ['https://www.googleapis.com/auth/spreadsheets']
    });
    
    await doc.useServiceAccountAuth(serviceAccountAuth);
    
    await doc.loadInfo();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìä –¢–∞–±–ª–∏—Ü–∞: ${doc.title}`);
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ª–∏—Å—Ç "payments"
    let sheet = doc.sheetsByTitle['payments'];
    if (!sheet) {
      console.log('üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç "payments"...');
      sheet = await doc.addSheet({ 
        title: 'payments',
        headerValues: Object.keys(testData)
      });
      console.log('‚úÖ –õ–∏—Å—Ç "payments" —Å–æ–∑–¥–∞–Ω!');
    } else {
      console.log('üìã –õ–∏—Å—Ç "payments" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      await sheet.setHeaderRow(Object.keys(testData));
      console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É...');
    await sheet.addRow(testData);
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—Å—Ç–µ
    await sheet.loadHeaderRow();
    console.log('üìä –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã:', sheet.headerValues);
    console.log('üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫:', sheet.rowCount);
    
    console.log('üéâ –¢–µ—Å—Ç Google Sheets –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Google Sheets:', error);
    console.error('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    console.error('- GOOGLE_SHEETS_DOC_ID:', process.env.GOOGLE_SHEETS_DOC_ID ? '‚úÖ' : '‚ùå');
    console.error('- GOOGLE_SERVICE_EMAIL:', process.env.GOOGLE_SERVICE_EMAIL ? '‚úÖ' : '‚ùå');
    console.error('- GOOGLE_SERVICE_PRIVATE_KEY:', process.env.GOOGLE_SERVICE_PRIVATE_KEY ? '‚úÖ' : '‚ùå');
  }
}

testGoogleSheets();
