import Stripe from 'stripe';
import { GoogleSpreadsheet } from 'google-spreadsheet';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

async function exportAllPayments() {
  try {
    console.log('üîÑ –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –ø–ª–∞—Ç–µ–∂–µ–π –≤ Google Sheets...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–ª–∞—Ç–µ–∂–∏
    const payments = await stripe.paymentIntents.list({
      limit: 100
    });
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–µ–π: ${payments.data.length}`);
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
    const doc = new GoogleSpreadsheet(process.env.GOOGLE_SHEETS_DOC_ID);
    
    await doc.useServiceAccountAuth({
      client_email: process.env.GOOGLE_SERVICE_EMAIL,
      private_key: process.env.GOOGLE_SERVICE_PRIVATE_KEY?.replace(/\\n/g, '\n')
    });
    
    await doc.loadInfo();
    console.log(`üìÑ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–∞–±–ª–∏—Ü–µ: ${doc.title}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
    const sheet = doc.sheetsByIndex[0];
    
    // –û—á–∏—â–∞–µ–º –ª–∏—Å—Ç
    await sheet.clear();
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏
    const headers = [
      'Payment ID', 'Amount', 'Currency', 'Status', 'Created',
      'Customer ID', 'Customer Email',
      'UTM Source', 'UTM Medium', 'UTM Campaign', 'UTM Content',
      'Ad Name', 'Adset Name', 'Campaign Name',
      'Campaign ID', 'Ad ID', 'Adset ID', 'FBCLID'
    ];
    
    await sheet.addRow(headers);
    console.log('üìù –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –ø–ª–∞—Ç–µ–∂
    for (const payment of payments.data) {
      const customer = await stripe.customers.retrieve(payment.customer);
      const metadata = customer?.metadata || {};
      
      const row = [
        payment.id,
        `$${(payment.amount / 100).toFixed(2)}`,
        payment.currency.toUpperCase(),
        payment.status,
        new Date(payment.created * 1000).toLocaleString(),
        customer?.id || 'N/A',
        customer?.email || 'N/A',
        metadata.utm_source || 'N/A',
        metadata.utm_medium || 'N/A',
        metadata.utm_campaign || 'N/A',
        metadata.utm_content || 'N/A',
        metadata.ad_name || 'N/A',
        metadata.adset_name || 'N/A',
        metadata.campaign_name || 'N/A',
        metadata.campaign_id || 'N/A',
        metadata.ad_id || 'N/A',
        metadata.adset_id || 'N/A',
        metadata.fbclid || 'N/A'
      ];
      
      await sheet.addRow(row);
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${payment.id}`);
    }
    
    console.log(`üéâ –≠–ö–°–ü–û–†–¢ –ó–ê–í–ï–†–®–ï–ù! ${payments.data.length} –ø–ª–∞—Ç–µ–∂–µ–π –≤ Google Sheets`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

exportAllPayments();
