import Stripe from 'stripe';
import fetch from 'node-fetch';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

// –§—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ sync-payments.js)
function formatTelegram(payment, customer = null) {
  const amount = payment.amount / 100;
  const currency = payment.currency.toUpperCase();
  const email = customer?.email || 'N/A';
  const country = customer?.address?.country || 'US';
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π ID –∑–∞–∫–∞–∑–∞
  const orderId = Math.random().toString(36).substring(2, 15);
  
  // –ü–æ–ª—É—á–∞–µ–º metadata –∏–∑ customer
  const metadata = customer?.metadata || {};
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ metadata
  const gender = metadata.gender || 'N/A';
  const age = metadata.age || 'N/A';
  const creativeLink = metadata.creative_link || 'N/A';
  const platform = metadata.utm_source || 'N/A';
  const placement = metadata.utm_medium || 'N/A';
  const adName = metadata.ad_name || 'N/A';
  const adsetName = metadata.adset_name || 'N/A';
  const campaignName = metadata.utm_campaign || 'N/A';
  const productTag = metadata.product_tag || 'N/A';
  
  return `üü¢ Order ${orderId} was processed!
---------------------------
üí≥ card
üí∞ ${amount} ${currency}
üè∑Ô∏è ${productTag}
---------------------------
üìß ${email}
---------------------------
üå™Ô∏è ${orderId.substring(0, 6)}
üìç ${country}
üßç${gender} ${age}
üîó ${creativeLink}
${platform}
${placement}
${adName}
${adsetName}
${campaignName}`;
}

function formatSlack(payment, customer = null) {
  const amount = payment.amount / 100;
  const currency = payment.currency.toUpperCase();
  const email = customer?.email || 'N/A';
  const country = customer?.address?.country || 'US';
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π ID –∑–∞–∫–∞–∑–∞
  const orderId = Math.random().toString(36).substring(2, 15);
  
  // –ü–æ–ª—É—á–∞–µ–º metadata –∏–∑ customer
  const metadata = customer?.metadata || {};
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ metadata
  const gender = metadata.gender || 'N/A';
  const age = metadata.age || 'N/A';
  const creativeLink = metadata.creative_link || 'N/A';
  const platform = metadata.utm_source || 'N/A';
  const placement = metadata.utm_medium || 'N/A';
  const adName = metadata.ad_name || 'N/A';
  const adsetName = metadata.adset_name || 'N/A';
  const campaignName = metadata.utm_campaign || 'N/A';
  const productTag = metadata.product_tag || 'N/A';
  
  return `:large_green_circle: Order ${orderId.substring(0, 8)}... processed!
---------------------------
:credit_card: card
:moneybag: ${amount} ${currency}
:label: ${productTag}
---------------------------
:e-mail: ${email}
---------------------------
:round_pushpin: ${country}
:standing_person: ${gender} ${age}
:link: ${creativeLink}
${platform}
${placement}
${adName}
${adsetName}
${campaignName}`;
}

async function testFixedNotifications() {
  try {
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –£–í–ï–î–û–ú–õ–ï–ù–ò–ô...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂ —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const payments = await stripe.paymentIntents.list({ limit: 1 });
    
    if (payments.data.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    
    const payment = payments.data[0];
    const customer = await stripe.customers.retrieve(payment.customer);
    
    console.log(`üí≥ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–ª–∞—Ç–µ–∂–æ–º: ${payment.id}`);
    console.log(`üìß Email: ${customer?.email || 'N/A'}`);
    console.log(`üåç UTM Source: ${customer?.metadata?.utm_source || 'N/A'}`);
    console.log(`üì± Ad Name: ${customer?.metadata?.ad_name || 'N/A'}`);
    console.log(`üéØ Campaign: ${customer?.metadata?.utm_campaign || 'N/A'}`);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    const telegramMessage = formatTelegram(payment, customer);
    const slackMessage = formatSlack(payment, customer);
    
    console.log('\nüì± TELEGRAM –°–û–û–ë–©–ï–ù–ò–ï:');
    console.log(telegramMessage);
    
    console.log('\nüí¨ SLACK –°–û–û–ë–©–ï–ù–ò–ï:');
    console.log(slackMessage);
    
    console.log('\nüéØ –¢–ï–ü–ï–†–¨ –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ë–£–î–£–¢ –°–û–î–ï–†–ñ–ê–¢–¨ –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï!');
    console.log('‚úÖ UTM –º–µ—Ç–∫–∏ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è');
    console.log('‚úÖ Ad Name –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è');
    console.log('‚úÖ Campaign –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è');
    console.log('‚úÖ Email –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testFixedNotifications();
