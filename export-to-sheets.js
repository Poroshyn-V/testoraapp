import Stripe from 'stripe';
import { GoogleSpreadsheet } from 'google-spreadsheet';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

async function exportToSheets() {
  try {
    console.log('üîÑ –≠–∫—Å–ø–æ—Ä—Ç –≤ Google Sheets...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏
    const payments = await stripe.paymentIntents.list({ limit: 10 });
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ: ${payments.data.length} –ø–ª–∞—Ç–µ–∂–µ–π`);
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
    const doc = new GoogleSpreadsheet(process.env.GOOGLE_SHEETS_DOC_ID);
    
    // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    await doc.useServiceAccountAuth({
      client_email: process.env.GOOGLE_SERVICE_EMAIL,
      private_key: process.env.GOOGLE_SERVICE_PRIVATE_KEY.replace(/\\n/g, '\n')
    });
    
    await doc.loadInfo();
    console.log(`üìÑ –¢–∞–±–ª–∏—Ü–∞: ${doc.title}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –ª–∏—Å—Ç
    const sheet = doc.sheetsByIndex[0];
    
    // –û—á–∏—â–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    await sheet.clear();
    await sheet.addRow([
      'Payment ID', 'Amount', 'Currency', 'Status', 'Created',
      'Customer ID', 'Customer Email', 'UTM Source', 'UTM Medium', 'UTM Campaign'
    ]);
    
    console.log('üìù –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    for (const payment of payments.data) {
      const customer = await stripe.customers.retrieve(payment.customer);
      const metadata = customer?.metadata || {};
      
      await sheet.addRow([
        payment.id,
        `$${(payment.amount / 100).toFixed(2)}`,
        payment.currency.toUpperCase(),
        payment.status,
        new Date(payment.created * 1000).toLocaleString(),
        customer?.id || 'N/A',
        customer?.email || 'N/A',
        metadata.utm_source || 'N/A',
        metadata.utm_medium || 'N/A',
        metadata.utm_campaign || 'N/A'
      ]);
      
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${payment.id}`);
    }
    
    console.log(`üéâ –ì–û–¢–û–í–û! ${payments.data.length} –ø–ª–∞—Ç–µ–∂–µ–π –≤ Google Sheets`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

exportToSheets();
