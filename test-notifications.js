import fetch from 'node-fetch';

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || '';
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID || '';
const SLACK_BOT_TOKEN = process.env.SLACK_BOT_TOKEN || '';
const SLACK_CHANNEL_ID = process.env.SLACK_CHANNEL_ID || '';

async function sendTelegram(text) {
  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: text,
        disable_web_page_preview: true
      })
    });
    const result = await response.json();
    return response.ok;
  } catch (error) {
    console.error('Telegram error:', error.message);
    return false;
  }
}

async function sendSlack(text) {
  try {
    const response = await fetch('https://slack.com/api/chat.postMessage', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${SLACK_BOT_TOKEN}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        channel: SLACK_CHAT_ID,
        text: text,
        username: 'Stripe Sync Bot',
        icon_emoji: ':money_with_wings:'
      })
    });
    const result = await response.json();
    return result.ok;
  } catch (error) {
    console.error('Slack error:', error.message);
    return false;
  }
}

async function testNotifications() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ô...');
  
  const testMessage = `üß™ –¢–ï–°–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
---------------------------
üü¢ Order TEST123 –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω!
---------------------------
üí≥ card
üí∞ $9.99 USD
üè∑Ô∏è Test Product
---------------------------
üìß test@example.com
---------------------------
üå™Ô∏è TEST123
üìç US
üßçMale 25
üîó https://example.com
meta
Facebook_Mobile_Feed
Test Ad
Test Adset
Test Campaign`;

  console.log('üì± –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram...');
  const telegramResult = await sendTelegram(testMessage);
  console.log('Telegram —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', telegramResult ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞');
  
  console.log('üí¨ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Slack...');
  const slackResult = await sendSlack(testMessage);
  console.log('Slack —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', slackResult ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞');
  
  if (telegramResult && slackResult) {
    console.log('üéâ –í–°–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢!');
  } else {
    console.log('‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø–ú–ò');
  }
}

testNotifications();
