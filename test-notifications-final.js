import Stripe from 'stripe';
import fetch from 'node-fetch';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

async function testNotifications() {
  try {
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ô...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const payments = await stripe.paymentIntents.list({ limit: 1 });
    
    if (payments.data.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    
    const payment = payments.data[0];
    const customer = await stripe.customers.retrieve(payment.customer);
    const metadata = customer?.metadata || {};
    
    console.log(`üí≥ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–ª–∞—Ç–µ–∂–æ–º: ${payment.id}`);
    console.log(`üìß Email: ${customer?.email || 'N/A'}`);
    console.log(`üåç UTM Source: ${metadata.utm_source || 'N/A'}`);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ
    const amount = payment.amount / 100;
    const currency = payment.currency.toUpperCase();
    const email = customer?.email || 'N/A';
    const country = 'US'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const gender = metadata.gender || 'N/A';
    const age = metadata.age || 'N/A';
    const creativeLink = metadata.creative_link || 'N/A';
    const platform = metadata.utm_source || 'N/A';
    const placement = metadata.utm_medium || 'N/A';
    const adName = metadata.ad_name || 'N/A';
    const adsetName = metadata.adset_name || 'N/A';
    const campaignName = metadata.utm_campaign || 'N/A';
    const productTag = metadata.product_tag || 'N/A';
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π ID –∑–∞–∫–∞–∑–∞
    const orderId = Math.random().toString(36).substring(2, 15);
    
    // Telegram —Å–æ–æ–±—â–µ–Ω–∏–µ
    const telegramMessage = `üü¢ Order ${orderId} was processed!
---------------------------
üí≥ card
üí∞ ${amount} ${currency}
üè∑Ô∏è ${productTag}
---------------------------
üìß ${email}
---------------------------
üå™Ô∏è ${orderId.substring(0, 6)}
üìç ${country}
üßç${gender} ${age}
üîó ${creativeLink}
${platform}
${placement}
${adName}
${adsetName}
${campaignName}`;
    
    // Slack —Å–æ–æ–±—â–µ–Ω–∏–µ
    const slackMessage = `:large_green_circle: Order ${orderId.substring(0, 8)}... processed!
---------------------------
:credit_card: card
:moneybag: ${amount} ${currency}
:label: ${productTag}
---------------------------
:e-mail: ${email}
---------------------------
:round_pushpin: ${country}
:standing_person: ${gender} ${age}
:link: ${creativeLink}
${platform}
${placement}
${adName}
${adsetName}
${campaignName}`;
    
    console.log('\nüì± TELEGRAM –°–û–û–ë–©–ï–ù–ò–ï:');
    console.log(telegramMessage);
    
    console.log('\nüí¨ SLACK –°–û–û–ë–©–ï–ù–ò–ï:');
    console.log(slackMessage);
    
    console.log('\nüéØ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ú –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø–ú!');
    console.log('‚úÖ –ü—Ä–∏ –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ–π –ø–æ–∫—É–ø–∫–µ –±—É–¥–µ—Ç:');
    console.log('   üì± Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
    console.log('   üí¨ Slack —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
    console.log('   üìä –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—ã–≥—Ä—É–∑–∫–∞ –≤ Google Sheets');
    console.log('   üåç –ì–ï–û –¥–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è');
    console.log('   üè∑Ô∏è –í—Å–µ UTM –º–µ—Ç–∫–∏');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testNotifications();
