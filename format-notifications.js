import Stripe from 'stripe';

const stripe = new Stripe('sk_test_51S95aiLGc4AZl8D4LBucx6SeyHpr5atnp44MOqd9EOhsmh8faSY0ydSCIP8q1eRo5jvmkJsLPNJrqvRRSpPCxEnu00p48AJ5Er');

function formatTelegramNotification(payment, session = null) {
  const amount = payment.amount / 100;
  const currency = payment.currency.toUpperCase();
  const email = payment.receipt_email || session?.customer_details?.email || session?.customer_email || 'N/A';
  const country = session?.customer_details?.address?.country || 'N/A';
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π ID –∑–∞–∫–∞–∑–∞
  const orderId = Math.random().toString(36).substring(2, 15);
  
  // –ü–æ–ª—É—á–∞–µ–º metadata
  const metadata = session?.metadata || payment.metadata || {};
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ metadata
  const gender = metadata.gender || 'N/A';
  const age = metadata.age || 'N/A';
  const creativeLink = metadata.creative_link || metadata.creo_link || 'N/A';
  const platform = metadata.platform || metadata.utm_source || 'N/A';
  const placement = metadata.placement || metadata.platform_placement || 'N/A';
  const adName = metadata.ad_name || 'N/A';
  const adsetName = metadata.adset_name || 'N/A';
  const campaignName = metadata.campaign_name || 'N/A';
  const productTag = metadata.product_tag || 'N/A';
  
  return `üü¢ Order ${orderId} was processed!
---------------------------
üí≥ card
üí∞ ${amount} ${currency}
üè∑Ô∏è ${productTag}
---------------------------
üìß ${email}
---------------------------
üå™Ô∏è ${orderId.substring(0, 6)}
üìç ${country}
üßç${gender} ${age}
üîó ${creativeLink}
${platform} (${placement}) 
${adName} (${adsetName}) 
${campaignName} ()`;
}

function formatSlackNotification(payment, session = null) {
  const amount = payment.amount / 100;
  const currency = payment.currency.toUpperCase();
  const email = payment.receipt_email || session?.customer_details?.email || session?.customer_email || 'N/A';
  const country = session?.customer_details?.address?.country || 'N/A';
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π ID –∑–∞–∫–∞–∑–∞
  const orderId = Math.random().toString(36).substring(2, 15);
  
  // –ü–æ–ª—É—á–∞–µ–º metadata
  const metadata = session?.metadata || payment.metadata || {};
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ metadata
  const gender = metadata.gender || 'N/A';
  const age = metadata.age || 'N/A';
  const creativeLink = metadata.creative_link || metadata.creo_link || 'N/A';
  const platform = metadata.platform || metadata.utm_source || 'N/A';
  const placement = metadata.placement || metadata.platform_placement || 'N/A';
  const adName = metadata.ad_name || 'N/A';
  const adsetName = metadata.adset_name || 'N/A';
  const campaignName = metadata.campaign_name || 'N/A';
  const productTag = metadata.product_tag || 'N/A';
  
  return `:large_green_circle: Order ${orderId.substring(0, 8)}... processed!
---------------------------
:credit_card: card
:moneybag: ${amount} ${currency}
:label: ${productTag}
---------------------------
:e-mail: ${email}
---------------------------
:round_pushpin: ${country}
:standing_person: ${gender} ${age}
:link: ${creativeLink}
${platform}
${placement} (${platform})
${adName}
${adsetName}
${campaignName}`;
}

async function testFormattedNotifications() {
  console.log('üß™ –¢–ï–°–¢–ò–†–£–Æ –ù–û–í–´–ô –§–û–†–ú–ê–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô...\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∏
    const payments = await stripe.paymentIntents.list({ limit: 1 });
    const sessions = await stripe.checkout.sessions.list({ limit: 1 });

    if (payments.data.length > 0) {
      const payment = payments.data[0];
      const session = sessions.data[0];

      console.log('üì± TELEGRAM –§–û–†–ú–ê–¢:');
      console.log(formatTelegramNotification(payment, session));
      
      console.log('\nüí¨ SLACK –§–û–†–ú–ê–¢:');
      console.log(formatSlackNotification(payment, session));
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testFormattedNotifications();
