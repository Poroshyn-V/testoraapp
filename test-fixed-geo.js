import Stripe from 'stripe';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

async function testFixedGeo() {
  try {
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ì–ï–û...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂
    const payments = await stripe.paymentIntents.list({ limit: 1 });
    
    if (payments.data.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    
    const payment = payments.data[0];
    const customer = await stripe.customers.retrieve(payment.customer);
    const metadata = customer?.metadata || {};
    
    console.log(`üí≥ –ü–ª–∞—Ç–µ–∂: ${payment.id}`);
    console.log(`üìß Email: ${customer?.email || 'N/A'}`);
    console.log(`üåç Geo Country: ${metadata.geo_country || '–ù–ï–¢'}`);
    console.log(`üèôÔ∏è Geo City: ${metadata.geo_city || '–ù–ï–¢'}`);
    console.log(`üåê IP Address: ${metadata.ip_address || '–ù–ï–¢'}`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –ì–ï–û
    let geo = 'N/A';
    
    if (metadata.geo_country && metadata.geo_city) {
      geo = `${metadata.geo_country}, ${metadata.geo_city}`;
      console.log(`‚úÖ –ì–ï–û –∏–∑ metadata: ${geo}`);
    } else if (metadata.geo_country) {
      geo = metadata.geo_country;
      console.log(`‚úÖ –ì–ï–û —Å—Ç—Ä–∞–Ω–∞ –∏–∑ metadata: ${geo}`);
    } else {
      const ipAddress = metadata.ip_address || 'N/A';
      if (ipAddress !== 'N/A' && !ipAddress.includes(':')) {
        geo = `IPv4: ${ipAddress}`;
        console.log(`‚úÖ IPv4 –∞–¥—Ä–µ—Å: ${geo}`);
      } else if (ipAddress.includes(':')) {
        geo = 'IPv6';
        console.log(`‚úÖ IPv6 –∞–¥—Ä–µ—Å: ${geo}`);
      }
    }
    
    console.log(`\nüéØ –ò–¢–û–ì–û–í–´–ô –ì–ï–û: ${geo}`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const country = customer?.address?.country || metadata.geo_country || 'US';
    console.log(`üìç Country –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${country}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testFixedGeo();
