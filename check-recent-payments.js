import Stripe from 'stripe';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

async function checkRecentPayments() {
  try {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï–î–ù–ò–• –ü–õ–ê–¢–ï–ñ–ï–ô...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç
    const tenMinutesAgo = Math.floor((Date.now() - 10 * 60 * 1000) / 1000);
    
    const payments = await stripe.paymentIntents.list({
      limit: 10,
      created: {
        gte: tenMinutesAgo
      }
    });

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç: ${payments.data.length}`);

    if (payments.data.length > 0) {
      console.log('\nüí≥ –ü–û–°–õ–ï–î–ù–ò–ï –ü–õ–ê–¢–ï–ñ–ò:');
      console.log('================================');
      
      for (const payment of payments.data) {
        const customer = await stripe.customers.retrieve(payment.customer);
        const metadata = customer?.metadata || {};
        
        console.log(`\nüí≥ Payment: ${payment.id}`);
        console.log(`   Status: ${payment.status}`);
        console.log(`   Amount: $${(payment.amount / 100).toFixed(2)}`);
        console.log(`   Currency: ${payment.currency}`);
        console.log(`   Created: ${new Date(payment.created * 1000).toLocaleString()}`);
        console.log(`   Customer: ${customer?.id || 'N/A'}`);
        console.log(`   Email: ${customer?.email || 'N/A'}`);
        console.log(`   UTM Source: ${metadata.utm_source || 'N/A'}`);
        console.log(`   UTM Medium: ${metadata.utm_medium || 'N/A'}`);
        console.log(`   UTM Campaign: ${metadata.utm_campaign || 'N/A'}`);
        console.log(`   Ad Name: ${metadata.ad_name || 'N/A'}`);
        
        if (payment.status === 'succeeded') {
          console.log('   ‚úÖ –£–°–ü–ï–®–ù–´–ô –ü–õ–ê–¢–ï–ñ - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
        }
      }
    } else {
      console.log('üì≠ –ù–æ–≤—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç –Ω–µ—Ç');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç–µ–∂–µ–π
    const allPayments = await stripe.paymentIntents.list({ limit: 5 });
    console.log(`\nüìà –í—Å–µ–≥–æ –ø–ª–∞—Ç–µ–∂–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: ${allPayments.data.length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞—Ç–µ–∂–µ–π:', error.message);
  }
}

checkRecentPayments();
